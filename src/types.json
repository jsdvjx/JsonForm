{"ElAlert":{"file":"alert.d.ts","name":"ElAlert","params":[{"desc":"Title","name":"title","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Component type","name":"type","value":"AlertType","type":"AlertType","multiple":false,"enmu":["success","warning","info","error"]},{"desc":"Descriptive text. Can also be passed with the default slot","name":"description","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"If closable or not","name":"closable","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"whether to center the text","name":"center","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Customized close button text","name":"closeText","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"If a type icon is displayed","name":"showIcon","value":"boolean","type":"boolean","multiple":false,"enmu":false}]},"ElAside":{"file":"aside.d.ts","name":"ElAside","params":[{"desc":"Width of the side section","name":"width","value":"string","type":"string","multiple":false,"enmu":false}]},"ElAutocomplete":{"file":"autocomplete.d.ts","name":"ElAutocomplete","params":[{"desc":"The placeholder of Autocomplete","name":"placeholder","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether Autocomplete is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Binding value","name":"value","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Debounce delay when typing","name":"debounce","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Name for the inner native input","name":"name","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Key name of the input suggestion object for display","name":"valueKey","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether to emit select event on enter when there is no autocomplete match","name":"selectWhenUnmatched","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"A method to fetch input suggestions. When suggestions are ready, invoke callback(data:[]) to return them to Autocomplete","name":"fetchSuggestions","value":"FetchSuggestions","type":"FetchSuggestions","multiple":false,"enmu":false},{"desc":"Custom class name for autocomplete's dropdown","name":"popperClass","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether show suggestions when input focus","name":"triggerOnFocus","value":"boolean","type":"boolean","multiple":false,"enmu":false}]},"ElBadge":{"file":"badge.d.ts","name":"ElBadge","params":[{"desc":"Display value","name":"value","value":"string | number","type":["string","number"],"multiple":true,"enmu":false}]},"ElBreadcrumbItem":{"file":"breadcrumb-item.d.ts","name":"ElBreadcrumbItem","params":[{"desc":"Target route of the link, same as to of vue-router","name":"to","value":"string | object","type":["string","object"],"multiple":true,"enmu":false},{"desc":"If true, the navigation will not leave a history record","name":"replace","value":"boolean","type":"boolean","multiple":false,"enmu":false}]},"ElBreadcrumb":{"file":"breadcrumb.d.ts","name":"ElBreadcrumb","params":[{"desc":"Separator character","name":"separator","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Class name of the icon separator","name":"separatorClass","value":"string","type":"string","multiple":false,"enmu":false}]},"ElButtonGroup":{"file":"button-group.d.ts","name":"ElButtonGroup"},"ElButton":{"file":"button.d.ts","name":"ElButton","params":[{"desc":"Button size","name":"size","value":"ElementUIComponentSize","type":"ElementUIComponentSize","multiple":false,"enmu":["ElementUIComponent"]},{"desc":"Button type","name":"type","value":"ButtonType","type":"ButtonType","multiple":false,"enmu":["primary","success","warning","danger","info","text"]},{"desc":"Determine whether it's a plain button","name":"plain","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Determine whether it's a round button","name":"round","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Determine whether it's loading","name":"loading","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Disable the button","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Button icon, accepts an icon name of Element icon component","name":"icon","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Same as native button's autofocus","name":"autofocus","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Same as native button's type","name":"nativeType","value":"ButtonNativeType","type":"ButtonNativeType","multiple":false,"enmu":false}]},"ElCard":{"file":"card.d.ts","name":"ElCard","params":[{"desc":"Title of the card","name":"header","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"CSS style of body","name":"bodyStyle","value":"object","type":"object","multiple":false,"enmu":false}]},"ElCarouselItem":{"file":"carousel-item.d.ts","name":"ElCarouselItem","params":[{"desc":"Name of the item, can be used in setActiveItem","name":"name","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Text content for the corresponding indicator","name":"label","value":"string","type":"string","multiple":false,"enmu":false}]},"ElCarousel":{"file":"carousel.d.ts","name":"ElCarousel","params":[{"desc":"Height of the carousel","name":"height","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Index of the initially active slide (starting from 0)","name":"initialIndex","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"How indicators are triggered","name":"trigger","value":"CarouselIndicatorTrigger","type":"CarouselIndicatorTrigger","multiple":false,"enmu":["hover","click"]},{"desc":"Whether automatically loop the slides","name":"autoplay","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Interval of the auto loop, in milliseconds","name":"interval","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Position of the indicators","name":"indicatorPosition","value":"CarouselIndicatorPosition","type":"CarouselIndicatorPosition","multiple":false,"enmu":false},{"desc":"When arrows are shown","name":"arrow","value":"CarouselArrowVisibility","type":"CarouselArrowVisibility","multiple":false,"enmu":false},{"desc":"Type of the Carousel","name":"type","value":"CarouselType","type":"CarouselType","multiple":false,"enmu":false},{"desc":"Switch to the previous slide","name":"prev ()","value":"void","type":"void","multiple":false,"enmu":false},{"desc":"Switch to the next slide","name":"next ()","value":"void","type":"void","multiple":false,"enmu":false}]},"ElCascader":{"file":"cascader.d.ts","name":"ElCascader","params":[{"desc":"Data of the options","name":"options","value":"CascaderOption[]","type":"CascaderOption[]","multiple":false,"enmu":false},{"desc":"Configuration options","name":"props","value":"object","type":"object","multiple":false,"enmu":false},{"desc":"Selected value","name":"value","value":"any[]","type":"any[]","multiple":false,"enmu":false},{"desc":"Custom class name for Cascader's dropdown","name":"popperClass","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Input placeholder","name":"placeholder","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether Cascader is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether selected value can be cleared","name":"clearable","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Trigger mode of expanding current item","name":"expandTrigger","value":"ExpandTrigger","type":"ExpandTrigger","multiple":false,"enmu":["click","hover"]},{"desc":"Whether to display all levels of the selected value in the input","name":"showAllLevels","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether the options can be searched","name":"filterable","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Debounce delay when typing filter keyword, in millisecond","name":"debounce","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Whether selecting an option of any level is permitted","name":"changeOnSelect","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Size of Input","name":"size","value":"ElementUIComponentSize","type":"ElementUIComponentSize","multiple":false,"enmu":["ElementUIComponent"]},{"desc":"Hook function before filtering with the value to be filtered as its parameter","name":"beforeFilter","value":"(value: string) => boolean | Promise<any>","type":"function","multiple":false,"enmu":false}]},"ElCheckboxButton":{"file":"checkbox-button.d.ts","name":"ElCheckboxButton","params":[{"desc":"Value of the checkbox when used inside a checkbox-group","name":"label","value":"string | number | boolean","type":["string","number","boolean"],"multiple":true,"enmu":false},{"desc":"Value of the checkbox if it's checked","name":"trueLabel","value":"string | number","type":["string","number"],"multiple":true,"enmu":false},{"desc":"Value of the checkbox if it's not checked","name":"falseLabel","value":"string | number","type":["string","number"],"multiple":true,"enmu":false},{"desc":"Native 'name' attribute","name":"name","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"If the checkbox is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"If the checkbox is checked","name":"checked","value":"boolean","type":"boolean","multiple":false,"enmu":false}]},"ElCheckboxGroup":{"file":"checkbox-group.d.ts","name":"ElCheckboxGroup","params":[{"desc":"Size of checkbox buttons or bordered checkboxes","name":"size","value":"ElementUIComponentSize","type":"ElementUIComponentSize","multiple":false,"enmu":["ElementUIComponent"]},{"desc":"Whether the nesting checkboxes are disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Minimum number of checkbox checked","name":"min","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Maximum number of checkbox checked","name":"max","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Font color when button is active","name":"textColor","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Border and background color when button is active","name":"fill","value":"string","type":"string","multiple":false,"enmu":false}]},"ElCheckbox":{"file":"checkbox.d.ts","name":"ElCheckbox","params":[{"desc":"The form input value","name":"value","value":"string | string[]","type":["string","string[]"],"multiple":true,"enmu":false},{"desc":"Value of the checkbox when used inside a checkbox-group","name":"label","value":"string | number | boolean","type":["string","number","boolean"],"multiple":true,"enmu":false},{"desc":"Value of the checkbox if it's checked","name":"trueLabel","value":"string | number","type":["string","number"],"multiple":true,"enmu":false},{"desc":"Value of the checkbox if it's not checked","name":"falseLabel","value":"string | number","type":["string","number"],"multiple":true,"enmu":false},{"desc":"Native 'name' attribute","name":"name","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether to add a border around Checkbox","name":"border","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Size of the Checkbox, only works when border is true","name":"size","value":"ElementUIComponentSize","type":"ElementUIComponentSize","multiple":false,"enmu":["ElementUIComponent"]},{"desc":"If the checkbox is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"If the checkbox is checked","name":"checked","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Same as indeterminate in native checkbox","name":"indeterminate","value":"boolean","type":"boolean","multiple":false,"enmu":false}]},"ElCol":{"file":"col.d.ts","name":"ElCol","params":[{"desc":"Number of column the grid spans","name":"span","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Number of spacing on the left side of the grid","name":"offset","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Number of columns that grid moves to the right","name":"push","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Number of columns that grid moves to the left","name":"pull","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"<768px Responsive columns or column props object","name":"xs","value":"ResponsiveColumn","type":"ResponsiveColumn","multiple":false,"enmu":["number","ResponsiveColumnProperties"]},{"desc":"≥768px Responsive columns or column props object","name":"sm","value":"ResponsiveColumn","type":"ResponsiveColumn","multiple":false,"enmu":["number","ResponsiveColumnProperties"]},{"desc":"≥992px Responsive columns or column props object","name":"md","value":"ResponsiveColumn","type":"ResponsiveColumn","multiple":false,"enmu":["number","ResponsiveColumnProperties"]},{"desc":"≥1200px Responsive columns or column props object","name":"lg","value":"ResponsiveColumn","type":"ResponsiveColumn","multiple":false,"enmu":["number","ResponsiveColumnProperties"]},{"desc":"≥1920px Responsive columns or column props object","name":"xl","value":"ResponsiveColumn","type":"ResponsiveColumn","multiple":false,"enmu":["number","ResponsiveColumnProperties"]},{"desc":"custom element tag","name":"tag","value":"string","type":"string","multiple":false,"enmu":false}]},"ElCollapseItem":{"file":"collapse-item.d.ts","name":"ElCollapseItem","params":[{"desc":"Unique identification of the panel","name":"name","value":"string | number","type":["string","number"],"multiple":true,"enmu":false},{"desc":"Title of the panel","name":"title","value":"string","type":"string","multiple":false,"enmu":false}]},"ElCollapse":{"file":"collapse.d.ts","name":"ElCollapse","params":[{"desc":"Whether to activate accordion mode","name":"accordion","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Currently active panel","name":"value","value":"string | number | string[] | number[]","type":["string","number","string[]","number[]"],"multiple":true,"enmu":false}]},"ElColorPicker":{"file":"color-picker.d.ts","name":"ElColorPicker","params":[{"desc":"Whether to display the alpha slider","name":"showAlpha","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to disable the ColorPicker","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Size of ColorPicker","name":"size","value":"ElementUIComponentSize","type":"ElementUIComponentSize","multiple":false,"enmu":["ElementUIComponent"]},{"desc":"Whether to display the alpha slider","name":"popperClass","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Custom class name for ColorPicker's dropdown","name":"colorFormat","value":"ColorFormat","type":"ColorFormat","multiple":false,"enmu":["hsl","hsv","hex","rgb"]}]},"ElComponent":{"file":"component.d.ts","name":"ElComponent"},"ElContainer":{"file":"container.d.ts","name":"ElContainer","params":[{"desc":"Layout direction for child elements","name":"direction","value":"'horizontal' | 'vertical'","type":"string","multiple":false,"enmu":["horizontal","vertical"]}]},"ElDatePicker":{"file":"date-picker.d.ts","name":"ElDatePicker","params":[{"desc":"The value of the date picker","name":"value","value":"Date | string | Date[] | string[]","type":["Date","string","Date[]","string[]"],"multiple":true,"enmu":false},{"desc":"Whether DatePicker is read only","name":"readonly","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether DatePicker is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Size of Input","name":"size","value":"ElementUIComponentSize","type":"ElementUIComponentSize","multiple":false,"enmu":["ElementUIComponent"]},{"desc":"Whether the input is editable","name":"editable","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to show clear button","name":"clearable","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Placeholder","name":"placeholder","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Placeholder for the start date in range mode","name":"startPlaceholder","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Placeholder for the end date in range mode","name":"endPlaceholder","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Type of the picker","name":"type","value":"DatePickerType","type":"DatePickerType","multiple":false,"enmu":["year","month","date","datetime","week","datetimerange","daterange"]},{"desc":"Format of the picker","name":"format","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Alignment","name":"align","value":"ElementUIHorizontalAlignment","type":"ElementUIHorizontalAlignment","multiple":false,"enmu":["start","end","center","space-around","space-between"]},{"desc":"Custom class name for DatePicker's dropdown","name":"popperClass","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Additional options, check the table below","name":"pickerOptions","value":"DatePickerOptions","type":"DatePickerOptions","multiple":false,"enmu":false},{"desc":"Range separator","name":"rangeSeparator","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Default date of the calendar","name":"defaultValue","value":"Date | number | string","type":["Date","number","string"],"multiple":true,"enmu":false},{"desc":"Format of binding value. If not specified, the binding value will be a Date object","name":"valueFormat","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"name for the inner native input","name":"name","value":"string","type":"string","multiple":false,"enmu":false}]},"ElDialog":{"file":"dialog.d.ts","name":"ElDialog","params":[{"desc":"Title of Dialog","name":"title","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Width of Dialog","name":"width","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether the Dialog takes up full screen","name":"fullscreen","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Value for margin-top of Dialog CSS","name":"top","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether a mask is displayed","name":"modal","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to append modal to body element. If false, the modal will be appended to Dialog's parent element","name":"modalAppendToBody","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether scroll of body is disabled while Dialog is displayed","name":"lockScroll","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Custom class names for Dialog","name":"customClass","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether the Dialog can be closed by clicking the mask","name":"closeOnClickModal","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether the Dialog can be closed by pressing ESC","name":"closeOnPressEscape","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to show a close button","name":"showClose","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Callback before Dialog closes, and it will prevent Dialog from closing","name":"beforeClose","value":"(done: Function) => void","type":"function","multiple":false,"enmu":false},{"desc":"Whether to align the header and footer in center","name":"center","value":"boolean","type":"boolean","multiple":false,"enmu":false}]},"ElDropdownItem":{"file":"dropdown-item.d.ts","name":"ElDropdownItem","params":[{"desc":"A command to be dispatched to Dropdown's command callback","name":"command","value":"string | number | object","type":["string","number","object"],"multiple":true,"enmu":false},{"desc":"Whether the item is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether a divider is displayed","name":"divided","value":"boolean","type":"boolean","multiple":false,"enmu":false}]},"ElDropdownMenu":{"file":"dropdown-menu.d.ts","name":"ElDropdownMenu"},"ElDropdown":{"file":"dropdown.d.ts","name":"ElDropdown","params":[{"desc":"Menu button type. only works when split-button is true","name":"type","value":"ButtonType","type":"ButtonType","multiple":false,"enmu":["primary","success","warning","danger","info","text"]},{"desc":"Whether a button group is displayed","name":"splitButton","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"menu size, also works on the split button","name":"size","value":"ElementUIComponentSize","type":"ElementUIComponentSize","multiple":false,"enmu":["ElementUIComponent"]},{"desc":"Placement of the menu","name":"placement","value":"DropdownMenuAlignment","type":"DropdownMenuAlignment","multiple":false,"enmu":["top","top-start","top-end","bottom","bottom-start","bottom-end"]},{"desc":"How to trigger","name":"trigger","value":"DropdownMenuTrigger","type":"DropdownMenuTrigger","multiple":false,"enmu":false},{"desc":"Whether to hide menu after clicking menu-item","name":"hideOnClick","value":"boolean","type":"boolean","multiple":false,"enmu":false}]},"ElElementUi":{"file":"element-ui.d.ts","name":"ElElementUi"},"ElFooter":{"file":"footer.d.ts","name":"ElFooter","params":[{"desc":"Height of the footer","name":"height","value":"string","type":"string","multiple":false,"enmu":false}]},"ElFormItem":{"file":"form-item.d.ts","name":"ElFormItem","params":[{"desc":"A key of `model` of the enclosing `el-form` component","name":"prop","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Label","name":"label","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Width of label, e.g. '50px'","name":"labelWidth","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether the field is required or not, will be determined by validation rules if omitted","name":"required","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Validation rules of form","name":"rules","value":"object","type":"object","multiple":false,"enmu":false},{"desc":"Field error message, set its value and the field will validate error and show this message immediately","name":"error","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether to show the error message","name":"showMessage","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to display the error message inline with the form item","name":"inlineMessage","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Controls the size of components in this form","name":"size","value":"ElementUIComponentSize","type":"ElementUIComponentSize","multiple":false,"enmu":["ElementUIComponent"]}]},"ElForm":{"file":"form.d.ts","name":"ElForm","params":[{"desc":"Data of form component","name":"model","value":"object","type":"object","multiple":false,"enmu":false},{"desc":"Validation rules of form","name":"rules","value":"object","type":"object","multiple":false,"enmu":false},{"desc":"Whether the form is inline","name":"inline","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Position of label","name":"labelPosition","value":"FormItemLabelPosition","type":"FormItemLabelPosition","multiple":false,"enmu":["left","right","top"]},{"desc":"Width of label, and all form items will inherit from Form","name":"labelWidth","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Suffix of the label","name":"labelSuffix","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether to show the error message","name":"showMessage","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to display the error message inline with the form item","name":"inlineMessage","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to display an icon indicating the validation result","name":"statusIcon","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Controls the size of components in this form","name":"size","value":"ElementUIComponentSize","type":"ElementUIComponentSize","multiple":false,"enmu":["ElementUIComponent"]},{"desc":"reset all the fields and remove validation result","name":"resetFields ()","value":"void","type":"void","multiple":false,"enmu":false}]},"ElHeader":{"file":"header.d.ts","name":"ElHeader","params":[{"desc":"Height of the header","name":"height","value":"string","type":"string","multiple":false,"enmu":false}]},"ElIndex":{"file":"index.d.ts","name":"ElIndex"},"ElInputNumber":{"file":"input-number.d.ts","name":"ElInputNumber","params":[{"desc":"Binding value","name":"value","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"The minimum allowed value","name":"min","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"The maximum allowed value","name":"max","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Incremental step","name":"step","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Size of the component","name":"size","value":"InputNumberSize","type":"InputNumberSize","multiple":false,"enmu":["large","small"]},{"desc":"Whether the component is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to enable the control buttons","name":"controls","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Debounce delay when typing, in milliseconds","name":"debounce","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Position of the control buttons","name":"controlsPosition","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Same as name in native input","name":"name","value":"string","type":"string","multiple":false,"enmu":false}]},"ElInput":{"file":"input.d.ts","name":"ElInput","params":[{"desc":"Type of input","name":"type","value":"InputType","type":"InputType","multiple":false,"enmu":false},{"desc":"Binding value","name":"value","value":"string | number","type":["string","number"],"multiple":true,"enmu":false},{"desc":"Maximum Input text length","name":"maxlength","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Minimum Input text length","name":"minlength","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Placeholder of Input","name":"placeholder","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether Input is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Size of Input, works when type is not 'textarea'","name":"size","value":"ElementUIComponentSize","type":"ElementUIComponentSize","multiple":false,"enmu":["ElementUIComponent"]},{"desc":"Prefix icon class","name":"prefixIcon","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Suffix icon class","name":"suffixIcon","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Number of rows of textarea, only works when type is 'textarea'","name":"rows","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Whether textarea has an adaptive height, only works when type is 'textarea'","name":"autosize","value":"boolean | AutoSize","type":["boolean","AutoSize"],"multiple":true,"enmu":false},{"desc":"Same as auto-complete in native input","name":"autoComplete","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Same as name in native input","name":"name","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Same as readonly in native input","name":"readonly","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Same as max in native input","name":"max","value":"any","type":"any","multiple":false,"enmu":false},{"desc":"Same as min in native input","name":"min","value":"any","type":"any","multiple":false,"enmu":false},{"desc":"Same as step in native input","name":"step","value":"any","type":"any","multiple":false,"enmu":false},{"desc":"Control the resizability","name":"resize","value":"Resizability","type":"Resizability","multiple":false,"enmu":["none","both","horizontal","vertical"]},{"desc":"Same as autofocus in native input","name":"autofocus","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Same as form in native input","name":"form","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Hook function when clicking on the input icon","name":"onIconClick","value":"IconClickEventHandler","type":"IconClickEventHandler","multiple":false,"enmu":false}]},"ElLoading":{"file":"loading.d.ts","name":"ElLoading","params":[{"desc":"Close the Loading instance","name":"close ()","value":"void","type":"void","multiple":false,"enmu":false}]},"ElMain":{"file":"main.d.ts","name":"ElMain"},"ElMenuItemGroup":{"file":"menu-item-group.d.ts","name":"ElMenuItemGroup","params":[{"desc":"Group title","name":"title","value":"string","type":"string","multiple":false,"enmu":false}]},"ElMenuItem":{"file":"menu-item.d.ts","name":"ElMenuItem","params":[{"desc":"Unique identification","name":"index","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Vue Router object","name":"route","value":"object","type":"object","multiple":false,"enmu":false}]},"ElMenu":{"file":"menu.d.ts","name":"ElMenu","params":[{"desc":"Menu display mode","name":"mode","value":"MenuDisplayMode","type":"MenuDisplayMode","multiple":false,"enmu":["horizontal","vertical"]},{"desc":"Whether the menu is collapsed (available only in vertical mode)","name":"collapse","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Background color of Menu (hex format)","name":"backgroundColor","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Text color of Menu (hex format)","name":"textColor","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Text color of currently active menu item (hex format)","name":"activeTextColor","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Index of currently active menu","name":"defaultActive","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Array that contains keys of currently active sub-menus","name":"defaultOpeneds","value":"string[]","type":"string[]","multiple":false,"enmu":false},{"desc":"Whether only one sub-menu can be active","name":"uniqueOpened","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"How sub-menus are triggered, only works when mode is 'horizontal'","name":"menuTrigger","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether vue-router mode is activated. If true, index will be used as 'path' to activate the route action","name":"router","value":"boolean","type":"boolean","multiple":false,"enmu":false}]},"ElMessageBox":{"file":"message-box.d.ts","name":"ElMessageBox"},"ElMessage":{"file":"message.d.ts","name":"ElMessage","params":[{"desc":"Close the Loading instance","name":"close ()","value":"void","type":"void","multiple":false,"enmu":false}]},"ElNotification":{"file":"notification.d.ts","name":"ElNotification","params":[{"desc":"Close the Notification instance","name":"close ()","value":"void","type":"void","multiple":false,"enmu":false}]},"ElOptionGroup":{"file":"option-group.d.ts","name":"ElOptionGroup","params":[{"desc":"Name of the group","name":"label","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether to disable all options in this group","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false}]},"ElOption":{"file":"option.d.ts","name":"ElOption","params":[{"desc":"Value of option","name":"value","value":"any","type":"any","multiple":false,"enmu":false},{"desc":"Label of option, same as value if omitted","name":"label","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether option is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false}]},"ElPagination":{"file":"pagination.d.ts","name":"ElPagination","params":[{"desc":"Whether to use small pagination","name":"small","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Item count of each page","name":"pageSize","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Total item count","name":"total","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Total page count. Set either total or page-count and pages will be displayed; if you need page-sizes, total is required","name":"pageCount","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Current page number","name":"currentPage","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Options of item count per page","name":"pageSizes","value":"number[]","type":"number[]","multiple":false,"enmu":false},{"desc":"Custom class name for the page size Select's dropdown","name":"popperClass","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Text for the prev button","name":"prevText","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Text for the prev button","name":"nextText","value":"string","type":"string","multiple":false,"enmu":false}]},"ElPopover":{"file":"popover.d.ts","name":"ElPopover","params":[{"desc":"How the popover is triggered","name":"trigger","value":"PopoverTrigger","type":"PopoverTrigger","multiple":false,"enmu":["click","focus","hover","manual"]},{"desc":"Popover title","name":"title","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Popover content, can be replaced with a default slot","name":"content","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Popover width","name":"width","value":"string | number","type":["string","number"],"multiple":true,"enmu":false},{"desc":"Popover placement","name":"placement","value":"PopoverPlacement","type":"PopoverPlacement","multiple":false,"enmu":false},{"desc":"Whether Popover is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether popover is visible","name":"value","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Popover offset","name":"offset","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Popover transition animation","name":"transition","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether a tooltip arrow is displayed or not. For more info, please refer to Vue-popper","name":"visibleArrow","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Parameters for popper.js","name":"popperOptions","value":"object","type":"object","multiple":false,"enmu":false},{"desc":"Custom class name for popover","name":"popperClass","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Delay of appearance when trigger is hover, in milliseconds","name":"openDelay","value":"number","type":"number","multiple":false,"enmu":false}]},"ElProgress":{"file":"progress.d.ts","name":"ElProgress","params":[{"desc":"Percentage, required","name":"percentage","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"The type of progress bar","name":"type","value":"ProgressType","type":"ProgressType","multiple":false,"enmu":["line","circle"]},{"desc":"The width of progress bar","name":"strokeWidth","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Whether to place the percentage inside progress bar, only works when type is 'line'","name":"textInside","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"The current status of progress bar","name":"status","value":"ProgressStatus","type":"ProgressStatus","multiple":false,"enmu":false},{"desc":"The canvas width of circle progress bar","name":"width","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Whether to show percentage","name":"showText","value":"boolean","type":"boolean","multiple":false,"enmu":false}]},"ElRadioButton":{"file":"radio-button.d.ts","name":"ElRadioButton","params":[{"desc":"The form input value","name":"value","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"The value of radio","name":"label","value":"string | number","type":["string","number"],"multiple":true,"enmu":false},{"desc":"Whether radio is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Native 'name' attribute","name":"name","value":"string","type":"string","multiple":false,"enmu":false}]},"ElRadioGroup":{"file":"radio-group.d.ts","name":"ElRadioGroup","params":[{"desc":"The size of radio buttons","name":"size","value":"RadioGroupSize","type":"RadioGroupSize","multiple":false,"enmu":["large","small"]},{"desc":"Border and background color when button is active","name":"fill","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether the nesting radios are disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Font color when button is active","name":"textColor","value":"string","type":"string","multiple":false,"enmu":false}]},"ElRadio":{"file":"radio.d.ts","name":"ElRadio","params":[{"desc":"The form input value","name":"value","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"The value of radio","name":"label","value":"string | number | boolean","type":["string","number","boolean"],"multiple":true,"enmu":false},{"desc":"Whether radio is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to add a border around Radio","name":"border","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Native 'name' attribute","name":"name","value":"string","type":"string","multiple":false,"enmu":false}]},"ElRate":{"file":"rate.d.ts","name":"ElRate","params":[{"desc":"Max rating score","name":"max","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Whether Rate is read-only","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether picking half start is allowed","name":"allowHalf","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Threshold value between low and medium level. The value itself will be included in low level","name":"lowThreshold","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Threshold value between medium and high level. The value itself will be included in high level","name":"highThreshold","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Color array for icons. It should have 3 elements, each of which corresponds with a score level","name":"colors","value":"string[]","type":"string[]","multiple":false,"enmu":false},{"desc":"Color of unselected icons","name":"voidColor","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Color of unselected read-only icons","name":"disabledVoidColor","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Array of class names of icons. It should have 3 elements, each of which corresponds with a score level","name":"iconClasses","value":"string[]","type":"string[]","multiple":false,"enmu":false},{"desc":"Class name of unselected icons","name":"voidIconClass","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Class name of unselected read-only icons","name":"disabledVoidIconClass","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether to display texts","name":"showText","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to display current score. show-score and show-text cannot be true at the same time","name":"showScore","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Color of texts","name":"textColor","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Text array","name":"texts","value":"string[]","type":"string[]","multiple":false,"enmu":false},{"desc":"Text template when the component is read-only","name":"scoreTemplate","value":"string","type":"string","multiple":false,"enmu":false}]},"ElRow":{"file":"row.d.ts","name":"ElRow","params":[{"desc":"Grid spacing","name":"gutter","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Layout mode. You can use flex. Works in modern browsers","name":"type","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Horizontal alignment of flex layout","name":"justify","value":"HorizontalAlignment","type":"HorizontalAlignment","multiple":false,"enmu":["start","end","center","space-around","space-between"]},{"desc":"Vertical alignment of flex layout","name":"align","value":"VertialAlignment","type":"VertialAlignment","multiple":false,"enmu":false},{"desc":"Custom element tag","name":"tag","value":"string","type":"string","multiple":false,"enmu":false}]},"ElSelect":{"file":"select.d.ts","name":"ElSelect","params":[{"desc":"The form input value","name":"value","value":"any","type":"any","multiple":false,"enmu":false},{"desc":"Whether multiple-select is activated","name":"multiple","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether Select is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Unique identity key name for value, required when value is an object","name":"valueKey","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Size of Input","name":"size","value":"ElementUIComponentSize","type":"ElementUIComponentSize","multiple":false,"enmu":["ElementUIComponent"]},{"desc":"Whether single select can be cleared","name":"clearable","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Maximum number of options user can select when multiple is true. No limit when set to 0","name":"multipleLimit","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"The name attribute of select input","name":"name","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Placeholder","name":"placeholder","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether Select is filterable","name":"filterable","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether creating new items is allowed. To use this, filterable must be true","name":"allowCreate","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Custom filter method","name":"filterMethod","value":"QueryChangeHandler","type":"QueryChangeHandler","multiple":false,"enmu":false},{"desc":"Whether options are loaded from server","name":"remote","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Custom remote search method","name":"remoteMethod","value":"QueryChangeHandler","type":"QueryChangeHandler","multiple":false,"enmu":false},{"desc":"Whether Select is loading data from server","name":"loading","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Displayed text while loading data from server","name":"loadingText","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Displayed text when no data matches the filtering query","name":"noMatchText","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Displayed text when there is no options","name":"noDataText","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Custom class name for Select's dropdown","name":"popperClass","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Select first matching option on enter key. Use with filterable or remote","name":"defaultFirstOption","value":"boolean","type":"boolean","multiple":false,"enmu":false}]},"ElSlider":{"file":"slider.d.ts","name":"ElSlider","params":[{"desc":"Current value of the slider","name":"value","value":"number | number[]","type":["number","number[]"],"multiple":true,"enmu":false},{"desc":"Minimum value","name":"min","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Maximum value","name":"max","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Whether Slider is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Step size","name":"step","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Whether to display an input box, works when range is false","name":"showInput","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Format of displayed tooltip value","name":"formatTooltip","value":"SliderTooltipFormat","type":"SliderTooltipFormat","multiple":false,"enmu":false},{"desc":"Whether to display control buttons when show-input is true","name":"showInputControls","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to display breakpoints","name":"showStops","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to display tooltip value","name":"showTooltip","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to select a range","name":"range","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Vertical mode","name":"vertical","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Slider height, required in vertical mode","name":"height","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Debounce delay when typing, in milliseconds, works when show-input is true","name":"debounce","value":"number","type":"number","multiple":false,"enmu":false}]},"ElStep":{"file":"step.d.ts","name":"ElStep","params":[{"desc":"Step title","name":"title","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Step description","name":"description","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Step icon","name":"icon","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Current status. It will be automatically set by Steps if not configured.","name":"status","value":"StepStatus","type":"StepStatus","multiple":false,"enmu":["wait","process","finish","error","success"]}]},"ElSteps":{"file":"steps.d.ts","name":"ElSteps","params":[{"desc":"The spacing of each step, will be responsive if omitted. Support percentage.","name":"space","value":"number | string","type":["number","string"],"multiple":true,"enmu":false},{"desc":"Display direction","name":"direction","value":"StepsDirection","type":"StepsDirection","multiple":false,"enmu":["vertical","horizontal"]},{"desc":"Current activation step","name":"active","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Status of current step","name":"processStatus","value":"StepStatus","type":"StepStatus","multiple":false,"enmu":["wait","process","finish","error","success"]},{"desc":"Status of end step","name":"finishStatus","value":"StepStatus","type":"StepStatus","multiple":false,"enmu":["wait","process","finish","error","success"]},{"desc":"Whether step description is centered","name":"alignCenter","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to apply simple theme","name":"simple","value":"boolean","type":"boolean","multiple":false,"enmu":false}]},"ElSubmenu":{"file":"submenu.d.ts","name":"ElSubmenu","params":[{"desc":"Unique identification","name":"index","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Delay time before show a sub-menu","name":"showTimeout","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Delay time before hide a sub-menu","name":"hideTimeout","value":"number","type":"number","multiple":false,"enmu":false}]},"ElSwitch":{"file":"switch.d.ts","name":"ElSwitch","params":[{"desc":"Whether Switch is on","name":"value","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether Switch is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Width of Switch","name":"width","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Class name of the icon displayed when in on state, overrides on-text","name":"activeIconClass","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Class name of the icon displayed when in off state, overrides off-text","name":"inactiveIconClass","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Text displayed when in on state","name":"activeText","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Text displayed when in off state","name":"inactiveText","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Background color when in on state","name":"activeColor","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Background color when in off state","name":"inactiveColor","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Switch value when in on state","name":"activeValue","value":"string | boolean | number","type":["string","boolean","number"],"multiple":true,"enmu":false},{"desc":"Switch value when in off state","name":"inactiveValue","value":"string | boolean | number","type":["string","boolean","number"],"multiple":true,"enmu":false},{"desc":"Input name of Switch","name":"name","value":"string","type":"string","multiple":false,"enmu":false}]},"ElTabPane":{"file":"tab-pane.d.ts","name":"ElTabPane","params":[{"desc":"Title of the tab","name":"label","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether Tab is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Identifier corresponding to the activeName of Tabs, representing the alias of the tab-pane","name":"name","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether Tab is closable","name":"closable","value":"boolean","type":"boolean","multiple":false,"enmu":false}]},"ElTableColumn":{"file":"table-column.d.ts","name":"ElTableColumn","params":[{"desc":"Type of the column. If set to `selection`, the column will display checkbox. If set to `index`, the column will display index of the row (staring from 1). If set to `expand`, the column will display expand icon.","name":"type","value":"TableColumnType","type":"TableColumnType","multiple":false,"enmu":["default","selection","index","expand"]},{"desc":"Column label","name":"label","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Column's key. If you need to use the filter-change event, you need this attribute to identify which column is being filtered","name":"columnKey","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Field name. You can also use its alias: property","name":"prop","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Column width","name":"width","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Column minimum width. Columns with `width` has a fixed width, while columns with `min-width` has a width that is distributed in proportion","name":"minWidth","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether column is fixed at leftright. Will be fixed at left if `true`","name":"fixed","value":"boolean | TableColumnFixedType","type":["boolean","TableColumnFixedType"],"multiple":true,"enmu":false},{"desc":"Render function for table header of this column","name":"renderHeader","value":"(h: CreateElement, data: RenderHeaderData) => VNode | string","type":"function","multiple":false,"enmu":false},{"desc":"Whether column can be sorted","name":"sortable","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Sorting method. Works when `sortable` is `true`","name":"sortMethod","value":"(a: any, b: any) => number","type":"function","multiple":false,"enmu":false},{"desc":"Whether column width can be resized. Works when border of `el-table` is `true`","name":"resizable","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Function that formats content","name":"formatter","value":"(row: object, column: TableColumn) => any","type":"function","multiple":false,"enmu":false},{"desc":"Whether to hide extra content and show them in a tooltip when hovering on the cell","name":"showOverflowTooltip","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Alignment","name":"align","value":"ElementUIHorizontalAlignment","type":"ElementUIHorizontalAlignment","multiple":false,"enmu":["start","end","center","space-around","space-between"]},{"desc":"Alignment of the table header. If omitted, the value of the `align` attribute will be applied","name":"headerAlign","value":"ElementUIHorizontalAlignment","type":"ElementUIHorizontalAlignment","multiple":false,"enmu":["start","end","center","space-around","space-between"]},{"desc":"Class name of cells in the column","name":"className","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Class name of the label of this column","name":"labelClassName","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Function that determines if a certain row can be selected, works when `type` is `'selection'`","name":"selectable","value":"(row: object, index: number) => boolean","type":"function","multiple":false,"enmu":false},{"desc":"Whether to reserve selection after data refreshing, works when `type` is `'selection'`","name":"reserveSelection","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"An array of data filtering options","name":"filters","value":"TableColumnFilter[]","type":"TableColumnFilter[]","multiple":false,"enmu":false},{"desc":"Placement for the filter dropdown","name":"filterPlacement","value":"PopoverPlacement","type":"PopoverPlacement","multiple":false,"enmu":false},{"desc":"Whether data filtering supports multiple options","name":"filterMultiple","value":"Boolean","type":"Boolean","multiple":false,"enmu":false},{"desc":"Data filtering method. If `filter-multiple` is on, this method will be called multiple times for each row, and a row will display if one of the calls returns `true`","name":"filterMethod","value":"(value: any, row: object) => boolean","type":"function","multiple":false,"enmu":false},{"desc":"Filter value for selected data, might be useful when table header is rendered with `render-header`","name":"filteredValue","value":"TableColumnFilter[]","type":"TableColumnFilter[]","multiple":false,"enmu":false}]},"ElTable":{"file":"table.d.ts","name":"ElTable","params":[{"desc":"Table data","name":"data","value":"object[]","type":"object[]","multiple":false,"enmu":false},{"desc":"Table's height. By default it has an auto height. If its value is a number, the height is measured in pixels; if its value is a string, the height is affected by external styles","name":"height","value":"string | number","type":["string","number"],"multiple":true,"enmu":false},{"desc":"Table's max-height. The height of the table starts from auto until it reaches the maxHeight limit. The maxHeight is measured in pixels, same as height","name":"maxHeight","value":"string | number","type":["string","number"],"multiple":true,"enmu":false},{"desc":"Whether table is striped","name":"stripe","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether table has vertical border","name":"border","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether width of column automatically fits its container","name":"fit","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether table header is visible","name":"showHeader","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether current row is highlighted","name":"highlightCurrentRow","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Key of current row, a set only prop","name":"currentRowKey","value":"string | number","type":["string","number"],"multiple":true,"enmu":false},{"desc":"Function that returns custom class names for a row, or a string assigning class names for every row","name":"rowClassName","value":"string | ((row: object, index: number) => string)","type":["string","function"],"multiple":true,"enmu":false},{"desc":"Function that returns custom style for a row, or a string assigning custom style for every row","name":"rowStyle","value":"string | object | ((row: object, index: number) => object)","type":["string","object","function"],"multiple":true,"enmu":false},{"desc":"Key of row data, used for optimizing rendering. Required if reserve-selection is on","name":"rowKey","value":"(row: object) => any","type":"function","multiple":false,"enmu":false},{"desc":"Displayed text when data is empty. You can customize this area with `slot=\"empty\"`","name":"emptyText","value":"String","type":"String","multiple":false,"enmu":false},{"desc":"Whether expand all rows by default. Only works when the table has a column `type=\"expand\"`","name":"defaultExpandAll","value":"Boolean","type":"Boolean","multiple":false,"enmu":false},{"desc":"Set expanded rows by this prop. Prop's value is the keys of expand rows, you should set row-key before using this prop","name":"expandRowKeys","value":"any[]","type":"any[]","multiple":false,"enmu":false},{"desc":"Set the default sort column and order","name":"defaultSort","value":"DefaultSortOptions","type":"DefaultSortOptions","multiple":false,"enmu":false},{"desc":"Tooltip effect property","name":"tooltipEffect","value":"TooltipEffect","type":"TooltipEffect","multiple":false,"enmu":["dark","light"]},{"desc":"Whether to display a summary row","name":"showSummary","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Displayed text for the first column of summary row","name":"sumText","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Custom summary method","name":"summaryMethod","value":"(param: SummaryMethodParams) => any[]","type":"function","multiple":false,"enmu":false},{"desc":"Clear selection. Might be useful when `reserve-selection` is on","name":"clearSelection ()","value":"void","type":"void","multiple":false,"enmu":false}]},"ElTabs":{"file":"tabs.d.ts","name":"ElTabs","params":[{"desc":"Type of Tab","name":"type","value":"TabType","type":"TabType","multiple":false,"enmu":["card","border-card"]},{"desc":"Whether Tab is closable","name":"closable","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether Tab is addable","name":"addable","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether Tab is addable and closable","name":"editable","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Name of the selected tab","name":"value","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Position of tabs","name":"tabPosition","value":"TabPosition","type":"TabPosition","multiple":false,"enmu":false}]},"ElTag":{"file":"tag.d.ts","name":"ElTag","params":[{"desc":"Theme","name":"type","value":"TagType","type":"TagType","multiple":false,"enmu":["primary","gray","success","warning","danger"]},{"desc":"Whether Tab can be removed","name":"closable","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether the removal animation is disabled","name":"disableTransitions","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether Tag has a highlighted border","name":"hit","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Background color of the tag","name":"color","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Tag size","name":"size","value":"ElementUIComponentSize","type":"ElementUIComponentSize","multiple":false,"enmu":["ElementUIComponent"]}]},"ElTimePicker":{"file":"time-picker.d.ts","name":"ElTimePicker","params":[{"desc":"Whether DatePicker is read only","name":"readonly","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether DatePicker is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether the input is editable","name":"editable","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to show clear button","name":"clearable","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Size of Input","name":"size","value":"ElementUIComponentSize","type":"ElementUIComponentSize","multiple":false,"enmu":["ElementUIComponent"]},{"desc":"Placeholder","name":"placeholder","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Placeholder for the start time in range mode","name":"startPlaceholder","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Placeholder for the end time in range mode","name":"endPlaceholder","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether to pick a time range","name":"isRange","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Value of the picker","name":"value","value":"string | Date","type":["string","Date"],"multiple":true,"enmu":false},{"desc":"Alignment","name":"align","value":"ElementUIHorizontalAlignment","type":"ElementUIHorizontalAlignment","multiple":false,"enmu":["start","end","center","space-around","space-between"]},{"desc":"Custom class name for TimePicker's dropdown","name":"popperClass","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Additional options, check the table below","name":"pickerOptions","value":"TimePickerOptions","type":"TimePickerOptions","multiple":false,"enmu":false},{"desc":"Range separator","name":"rangeSeparator","value":"string","type":"string","multiple":false,"enmu":false}]},"ElTimeSelect":{"file":"time-select.d.ts","name":"ElTimeSelect","params":[{"desc":"Whether DatePicker is read only","name":"readonly","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether DatePicker is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether the input is editable","name":"editable","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to show clear button","name":"clearable","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Size of Input","name":"size","value":"ElementUIComponentSize","type":"ElementUIComponentSize","multiple":false,"enmu":["ElementUIComponent"]},{"desc":"Placeholder","name":"placeholder","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Value of the picker","name":"value","value":"string | Date","type":["string","Date"],"multiple":true,"enmu":false},{"desc":"Alignment","name":"align","value":"ElementUIHorizontalAlignment","type":"ElementUIHorizontalAlignment","multiple":false,"enmu":["start","end","center","space-around","space-between"]},{"desc":"Custom class name for TimePicker's dropdown","name":"popperClass","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Additional options, check the table below","name":"pickerOptions","value":"TimeSelectOptions","type":"TimeSelectOptions","multiple":false,"enmu":false}]},"ElTooltip":{"file":"tooltip.d.ts","name":"ElTooltip","params":[{"desc":"Tooltip theme","name":"effect","value":"TooltipEffect","type":"TooltipEffect","multiple":false,"enmu":["dark","light"]},{"desc":"Display content, can be overridden by slot#content","name":"content","value":"String","type":"String","multiple":false,"enmu":false},{"desc":"Position of Tooltip","name":"placement","value":"PopoverPlacement","type":"PopoverPlacement","multiple":false,"enmu":false},{"desc":"Visibility of Tooltip","name":"value","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether Tooltip is disabled","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Offset of the Tooltip","name":"offset","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Animation name","name":"transition","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether an arrow is displayed. For more information, check Vue-popper page","name":"visibleArrow","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Popper.js parameters","name":"popperOptions","value":"object","type":"object","multiple":false,"enmu":false},{"desc":"Delay of appearance, in millisecond","name":"openDelay","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Whether to control Tooltip manually. mouseenter and mouseleave won't have effects if set to true","name":"manual","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Custom class name for Tooltip's popper","name":"popperClass","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether the mouse can enter the tooltip","name":"enterable","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Timeout in milliseconds to hide tooltip","name":"hideAfter","value":"string","type":"string","multiple":false,"enmu":false}]},"ElTransfer":{"file":"transfer.d.ts","name":"ElTransfer","params":[{"desc":"Data source","name":"data","value":"TransferData[]","type":"TransferData[]","multiple":false,"enmu":false},{"desc":"Whether Transfer is filterable","name":"filterable","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Placeholder for the filter input","name":"filterPlaceholder","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Custom filter method","name":"filterMethod","value":"(query: string, item: TransferData) => boolean","type":"function","multiple":false,"enmu":false},{"desc":"Custom list titles","name":"titles","value":"string[]","type":"string[]","multiple":false,"enmu":false},{"desc":"Custom button texts","name":"buttonTexts","value":"string[]","type":"string[]","multiple":false,"enmu":false},{"desc":"Custom render function for data items","name":"renderContent","value":"TransferRenderContent","type":"TransferRenderContent","multiple":false,"enmu":false},{"desc":"Texts for checking status in list header","name":"format","value":"TransferFormat","type":"TransferFormat","multiple":false,"enmu":false},{"desc":"Prop aliases for data source","name":"props","value":"TransferProps","type":"TransferProps","multiple":false,"enmu":false},{"desc":"Key array of initially checked data items of the left list","name":"leftDefaultChecked","value":"any[]","type":"any[]","multiple":false,"enmu":false},{"desc":"Key array of initially checked data items of the right list","name":"rightDefaultChecked","value":"any[]","type":"any[]","multiple":false,"enmu":false}]},"ElTree":{"file":"tree.d.ts","name":"ElTree","params":[{"desc":"Tree data","name":"data","value":"TreeNode[]","type":"TreeNode[]","multiple":false,"enmu":false},{"desc":"Text displayed when data is void","name":"emptyText","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Unique identity key name for nodes, its value should be unique across the whole tree","name":"nodeKey","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Configuration options, see the following table","name":"props","value":"object","type":"object","multiple":false,"enmu":false},{"desc":"Method for loading subtree data","name":"load","value":"(node: TreeNode, resolve: Function) => void","type":"function","multiple":false,"enmu":false},{"desc":"Render function for tree node","name":"renderContent","value":"RenderContent","type":"RenderContent","multiple":false,"enmu":false},{"desc":"Whether current node is highlighted","name":"highlightCurrent","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to expand all nodes by default","name":"defaultExpandAll","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to expand or collapse node when clicking on the node. If false, then expand or collapse node only when clicking on the arrow icon.","name":"expandOnClickNode","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to expand father node when a child node is expanded","name":"autoExpandParent","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Array of keys of initially expanded nodes","name":"defaultExpandedKeys","value":"any[]","type":"any[]","multiple":false,"enmu":false},{"desc":"Whether node is selectable","name":"showCheckbox","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether checked state of a node not affects its father and child nodes when show-checkbox is true","name":"checkStrictly","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Array of keys of initially checked nodes","name":"defaultCheckedKeys","value":"any[]","type":"any[]","multiple":false,"enmu":false},{"desc":"This function will be executed on each node when use filter method. If return false, tree node will be hidden.","name":"filterNodeMethod","value":"FilterNodeMethod","type":"FilterNodeMethod","multiple":false,"enmu":false},{"desc":"Whether only one node among the same level can be expanded at one time","name":"accordion","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Horizontal indentation of nodes in adjacent levels in pixels","name":"indent","value":"number","type":"number","multiple":false,"enmu":false}]},"ElUpload":{"file":"upload.d.ts","name":"ElUpload","params":[{"desc":"Request URL (required)","name":"action","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Request headers","name":"headers","value":"object","type":"object","multiple":false,"enmu":false},{"desc":"Whether uploading multiple files is permitted","name":"multiple","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Additions options of request","name":"data","value":"object","type":"object","multiple":false,"enmu":false},{"desc":"Key name for uploaded file","name":"name","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Whether cookies are sent","name":"withCredentials","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to show the uploaded file list","name":"showFileList","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Whether to activate drag and drop mode","name":"drag","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Accepted file types, will not work when thumbnail-mode is true","name":"accept","value":"string","type":"string","multiple":false,"enmu":false},{"desc":"Hook function when clicking the uploaded files","name":"onPreview","value":"(file: ElUploadInternalFileDetail) => void","type":"function","multiple":false,"enmu":false},{"desc":"Hook function when files are removed","name":"onRemove","value":"(file: ElUploadInternalFileDetail, fileList: ElUploadInternalFileDetail[]) => void","type":"function","multiple":false,"enmu":false},{"desc":"Hook function when uploaded successfully","name":"onSuccess","value":"(response: any, file: ElUploadInternalFileDetail, fileList: ElUploadInternalFileDetail) => void","type":"function","multiple":false,"enmu":false},{"desc":"Hook function when some errors occurs","name":"onError","value":"(err: ErrorEvent, file: ElUploadInternalFileDetail, fileList: ElUploadInternalFileDetail) => void","type":"function","multiple":false,"enmu":false},{"desc":"Hook function when some progress occurs","name":"onProgress","value":"(event: ElUploadProgressEvent, file: ElUploadInternalFileDetail, fileList: ElUploadInternalFileDetail) => void","type":"function","multiple":false,"enmu":false},{"desc":"Hook function when file status change","name":"onChange","value":"(file: ElUploadInternalFileDetail, fileList: ElUploadInternalFileDetail[]) => void","type":"function","multiple":false,"enmu":false},{"desc":"Hook function before uploading with the file to be uploaded as its parameter. If false or a Promise is returned, uploading will be aborted","name":"beforeUpload","value":"(file: ElUploadInternalFileDetail) => boolean | Promise<File | boolean>","type":"function","multiple":false,"enmu":false},{"desc":"Whether thumbnail is displayed","name":"thumbnailMode","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Default uploaded files","name":"fileList","value":"FileListItem[]","type":"FileListItem[]","multiple":false,"enmu":false},{"desc":"Type of fileList","name":"listType","value":"ListType","type":"ListType","multiple":false,"enmu":["text","picture","picture-card"]},{"desc":"Whether to auto upload file","name":"autoUpload","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Override default xhr behavior, allowing you to implement your own upload-file's request","name":"httpRequest","value":"(options: HttpRequestOptions) => void","type":"function","multiple":false,"enmu":false},{"desc":"Whether to disable upload","name":"disabled","value":"boolean","type":"boolean","multiple":false,"enmu":false},{"desc":"Maximum number of uploads allowed","name":"limit","value":"number","type":"number","multiple":false,"enmu":false},{"desc":"Hook function when limit is exceeded","name":"onExceed","value":"(file: ElUploadInternalFileDetail, fileList: ElUploadInternalFileDetail[]) => void","type":"function","multiple":false,"enmu":false}]}}